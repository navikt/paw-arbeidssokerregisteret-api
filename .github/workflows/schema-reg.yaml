name: Schema Reg uten schema

on:
  push:
    branches:
      - main
    paths:
      - 'schema-registry/**'
      - '.github/workflows/schema-reg.yaml'
      - 'settings.gradle.kts'
      - 'gradle.properties'
env:
  IMAGE: europe-north1-docker.pkg.dev/nais-management-233d/paw/paw-arbeidssokerregisteret-api-schema-registry

jobs:
  build:
    name: Build maven artifacts
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    outputs:
      image: ${{ steps.build-with-gradle.outputs.image }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: temurin
          cache: gradle
      - name: Set schema client image version
        run: echo "SCHEMA_REG_CLIENT_IMAGE_VERSION=$(date +'%y.%m.%d').${{ github.run_number }}-${{ github.run_attempt }}" >> $GITHUB_ENV
      - name: Login GAR
        uses: nais/login@v0
        with:
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          team: paw
      - name: Build with Gradle and Publish artifact
        id: build-with-gradle
        working-directory: ./
        run: |
          echo "(image med versjon)image=${{ env.IMAGE }}:${{ env.SCHEMA_REG_CLIENT_IMAGE_VERSION }}" 
          echo "image=${{ env.IMAGE }}:${{ env.SCHEMA_REG_CLIENT_IMAGE_VERSION }}" >> $GITHUB_OUTPUT
          ./gradlew -PschemaMinorVersion=${{ env.SCHEMA_REG_CLIENT_IMAGE_VERSION }} -Pimage=${{ env.IMAGE }} :schema-registry:build :schema-registry:test :schema-registry:jib
          echo "DIGEST=$(cat schema-registry/build/jib-image.digest)" >> $GITHUB_ENV
        env:
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
      - name: Attest and sign
        uses: nais/attest-sign@v1.5.11
        with:
          image_ref: ${{ env.IMAGE }}@${{ env.DIGEST }}

  verify-prod:
    name: Verify in prod-gcp
    permissions:
      contents: read
      id-token: write
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: schema-registry/nais-jobb.yaml
          VAR: image=${{ needs.build.outputs.image }},kafka=nav-prod,schema_domain=no-schema

